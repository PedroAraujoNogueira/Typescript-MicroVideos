1. Qual a diferença entre ?? e || em javascript ?

O || operador avalia para o lado direito se e somente se o lado esquerdo for um valor falso .
Exemplo:

O ??operador (coalescência nula) avalia para o lado direito se e somente se o lado esquerdo for nullou undefined.
Exemplo:

Então como false, 0, NaN, ""(string vazia) são, por exemplo, considerados falsos, mas talvez você realmente queira esses valores. Nesse caso, a ??operadora é a operadora certa a ser usada.

https://stackoverflow.com/questions/9549780/what-does-this-symbol-mean-in-javascript

2. Readonly de forma bem detalhada e com vários cenários.
https://www.typescripttutorial.net/typescript-tutorial/typescript-readonly/
https://www.tektutorialshub.com/typescript/readonly-properties-in-typescript/

3. Burlando um setter private.
Se quisermos atribuir um valor a um atributo private de uma classe mesmo estando em 
outra classe, então podemos usar o object["nomeDoAtributo"] = "valorDesejado", dessa 
forma conseguimos burlar o private, pois modificador de acesso private só funciona em 
tempo de compilação e a atribuição dinâmica para um objeto será feita em tempo de execução.  
OBS: Eu sei que não devemos acessar membros de classes privadas. Mas, às vezes, 
simplesmente não há como contornar. Por exemplo, durante os testes de unidade.
https://www.typescriptlang.org/play?#code/PTAEGYDoA5QQwCYIM6gA4CcCWA3OAXAU1ADMtCAbFAGlAHcALLAYwfg2LnrgE9QB7EqASFmFONgB2Ac3igxcZKjKUEofPwBQIUACNiAV0lw8WcborF+B-MiwiBQ-A2LN+k-HCyTvshUtpvMQMEX3V+UGQDXX9kQmRITW0wADF+DFBCAA84AFs0S1pnYgAFQgxkd3lxJT1KfjphfnjQSX58eAoKBtJ0+Eked0M7GX7k0G9kT0lmKycXasVUDVAORFB1BbIK-AA5PMJaGr2DgQzMQjIspNjQMoqqgG9NDYBiban93MIALkj8KTSADcL1Ar2OX1+-0BILeFyufymMKSGzckiRBmYGgwAAoPidvoiAb4jooCVCkST0BwEdDfABKUDPDYbZxYBLvLA7SGgAC8pC5nwOsJZbI5ENO-Il3xFrKYHPhWCyfOplyVIoAvijQNIOIR8DjGcyWToAJKSCazcSSNRYDrs1UkcpwCzEFYGOJyEgGLqtU6TIjrQSgADaiqyAF1Q8djN8I6CNjoGPh8GhkD8QHQs5A6FB0tJgOaiBhjPgsO44BRgABHAzxMvuZA1uAAWjQ5UqxgoLdj8VeaAIGHcPFyLATEyEOOMOCw0gI6Ug1ukBjg0niIYADFHeTvQAAidl7o3j1GN-iWRf8aQ4gAGAHEAM8AB7gFoQq9oABJHmLIJzuQcGqgN+v7gmSkIaje9KyqAQGUJ6xosvIZ4Xt0143gAEpQ3Rfj+8p-uGQEgfhYFCt8kHQeOWobFqWqaJYHQAFblIQuR8PykiEI09ydjie4AFIsWxe60HuABChASFgwmiQAshgR4guMACa1jyK+ADkHRrh0KyvnwwbFNSuAEMQKhUMoQ65AINh2A4zgEIsSg-EkOhpBk2R5AUhybA6dDuFp9DpAA1i5aKVKhV44sxHBsX+0qEJR4y7H0YphShhCXtee48QFqDHH6hIiaAMWsTwIZ7qR5J7hGSU6AAgshuS5FUtb1uWFp0MQOkTKge4AOoMHw-k+mogwGKAHpuvKAg4OUmzEBpmAmUQGnjMFhA8P5GC2haXCxOZCAAPx7qALagAxGn5fw-DBXofC5HAwVhPt-D5FJnbhOMDA9HaQUYBtu2gAAKjw7YAMrMNgaAdPoJDpMQUDQC5mi3AAIleTKgsteBEKAAD6vZEsip7ogCmLYlOBzEwyWNIb+hOSoVhCapodEMQIujsa0XGgBj2UAPJc4p4z9QFHQc+N8DMLMtQzlwCDtK07QEB1mj8FzkCM98Kp7uDaDtHuII6GJNgg2DhCQ9DHSVt0dCoLoGBwMwG0dG0ngNntqCvpkyDMHA7aLFN6tcxV2uEDVusAMIuCWPBG65YDAwsoMQ1DWAw6slwsTMczGbjViSBQfDZOytjwLpFstpYc0UOMjAsGw3yvssDCOVL-sWu4xfqBgHr2h0lSkBIkCgP1dpsDjpkCqoyDjJUVQrPocgDhgHSGQs-EmHAVsZxLr7LquPnFBaHc+49G11Cm5TjIfTseIQLQutYukLDOdi6GYdoGUI40ZG4IhEii2IIrSQgUCg+yqCIC4-syyjCMjeKeRAbwzyoKADaW10gIHGN4c2adra0CHn-TIWQy5hAAcQOgZgKDIQ8N4Os4R-rBVoLoM2bQ6DjDPp1bAeMKH0CYKwXq1R+BxAyCsIyW88C70zkuFca4Jhk0kggIBOhVITU7hdSSJZQAtQ4PAXQL8nLKHIBZBRC11DMHAAATmpPwA2yBKzfRTGmDMwBpAT2iJANwuRgD4EsVY4AmA7EiMrC2WILZDpNnGK+NQRl9CeCzpYRQxB3bxBckmZx6YQAiBwBYK8CRRxQxEYIfAXi3q+Itn7a2wBXxtCMMwXwLZ8CVPTjDFs4AWzQBbPEuAwBXiiEelUvebZsAFwiSYlAQA


4. 